class Solution {
public:
    int myAtoi(string s) {
        int i = 0;
        int n = s.size();
        
        while (i < n && s[i] == ' '){
            i += 1;
        }
        
        int sign = 1;
        if (i < n && (s[i] == '-' || s[i] == '+')){
            if (s[i] == '-'){
                sign = -1;
            }  
            i += 1;
        }
        
        int result = 0;
        while (i < n && isdigit(s[i])){
            int digit = s[i] - '0';
            
            // Check for overflow before actually multiplying
            if (result > INT_MAX/10 || (result == INT_MAX/10 && digit > INT_MAX%10)){
                return sign == 1 ? INT_MAX : INT_MIN;
            }
            
            result = result * 10 + digit;
            i += 1;
        }
        
        return result * sign;
    }
};
